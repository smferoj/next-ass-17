
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  firstName String   @db.VarChar(50)
  lastName  String   @db.VarChar(50)
  email     String   @unique() @db.VarChar(50)
  mobile    String   @db.VarChar(50)
  otp       String   @db.VarChar(10)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
  categories categories[]
  products   products[]
  customers  customers[]
  invoices   invoices[]
  invoice_products invoice_products[]
}

model categories {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name      String   @db.VarChar(50)
  user_id   BigInt   @unique() @db.UnsignedBigInt
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
  user      users    @relation(fields: [user_id], references: [id])
  products  products[]
}

model products {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  user_id     BigInt   @unique() @db.UnsignedBigInt
  category_id BigInt   @db.UnsignedBigInt
  name        String   @db.VarChar(50)
  price       String   @db.VarChar(300)
  unit        String   @db.VarChar(300)
  image_url   String   @db.VarChar(300)
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @updatedAt @db.Timestamp(0)
  user        users    @relation(fields: [user_id], references: [id])
  category    categories @relation(fields: [category_id], references: [id])
  invoice_products invoice_products[]
}

model customers {
  id        BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  name      String   @db.VarChar(50)
  email     String   @unique() @db.VarChar(50)
  mobile    String   @db.VarChar(50)
  user_id   BigInt   @unique() @db.UnsignedBigInt
  createdAt DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @default(now()) @updatedAt @db.Timestamp(0)
  user      users    @relation(fields: [user_id], references: [id])
  invoices  invoices[]
}

model invoices {
  id          BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  total       String   @db.VarChar(500)
  discount    String   @db.VarChar(500)
  vat         String   @db.VarChar(500)
  payable     String   @db.VarChar(500)
  user_id     BigInt    @unique()@db.UnsignedBigInt
  customer_id BigInt   @db.UnsignedBigInt
  createdAt   DateTime @default(now()) @db.Timestamp(0)
  updatedAt   DateTime @default(now()) @updatedAt @db.Timestamp(0)
  user        users    @relation(fields: [user_id], references: [id])
  customer    customers @relation(fields: [customer_id], references: [id])
  invoice_products invoice_products[]
}

model invoice_products {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  invoice_id BigInt   @db.UnsignedBigInt
  user_id    BigInt   @unique()@db.UnsignedBigInt
  product_id BigInt   @db.UnsignedBigInt
  qty        String   @db.VarChar(50)
  sale_price String   @db.VarChar(50)
  createdAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt  DateTime @default(now()) @updatedAt @db.Timestamp(0)
  invoice    invoices @relation(fields: [invoice_id], references: [id])
  user       users    @relation(fields: [user_id], references: [id])
  product    products @relation(fields: [product_id], references: [id])
}

